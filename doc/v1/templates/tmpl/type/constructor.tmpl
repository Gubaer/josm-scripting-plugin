<?js
/*
 * Renders information about constructors of a type.
 */
const doclet = obj.doclet;          // the doclet for the type
const data = obj.data;              // the taffy DB with the doclets
const ViewHelper = obj.ViewHelper;

const self = this;
const vh = new ViewHelper(data);

?>
<?js
const constructors =  data({memberof: doclet.name, kind: "class", name: doclet.name});
if (constructors.count() > 0) { ?>
<h2>Constructor</h2>
<?js
     var constructor = constructors.first();
   ?>
   <p id="<?js= constructor.name ?>" class="member-header">new <?js= constructor.name ?>()</p>
   <p><?js= vh.resolveClassReferences(constructor.description) ?></p>
   <?js= self.partial("type/examples.tmpl", constructor.examples) ?>

<?js
     const params = constructor.params;
     if (params && params.length > 0) {
?>
<h3>Parameters</h3>
<table class="parameters">
<tr>
   <th>Name</th>
   <th>Type</th>
   <th>Description</th>
</tr>
<?js   params.forEach(function(para) { ?>
<tr>
     <td><?js= para.name ?></td>
     <td><?js= para.type && para.type.names ? vh.resolveTypes(para.type.names) : "" ?></td>
     <td><?js= para.description ? vh.resolveClassReferences(para.description) : "" ?></td>
</tr>
<?js   });  /* end forEach */ ?>
</table>
<?js } /* end if */ ?>

<?js }  ?>