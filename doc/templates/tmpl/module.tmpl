<?js
  /*
   * Renders the page for a module
   */
  var doclet = obj.doclet;  // the module doclet
  var data   = obj.data;    // the TAFFY db with the doclets
  var ViewHelper = obj.ViewHelper; 

  var self = this;
  var vh = new ViewHelper(data);
?>
<div class="apidoc">
<h1 class="title">Module <?js= doclet.name ?></h1>
<?js /* ---------------- description and  example ------------------------- */ ?>
<p><?js= doclet.description ? vh.resolveClassReferences(doclet.description) : ""?></p>
<?js= self.partial("type/examples.tmpl", doclet.examples) ?>

<?js

var classes = data({kind: "class", memberof: doclet.name}).order("name");
var mixins = data({kind: "mixin", memberof: doclet.name}).order("name");
var namespaces = data({kind: "namespace", memberof: doclet.name}).order("name");
 ?>

<?js /* --------------------------- list of classes in the module ----------------------- */ ?>
<?js if (classes.count() > 0) { ?>
<p>This module provides the following classes:</p>
<ul>
<?js     classes.each(function(c) {  ?>
      <li><a href="../classes/<?js= c.name ?>.html"><?js= c.name ?></a></li>
<?js     });  /* end for */  ?>
</ul>   
<?js } /* end if */ ?>

<?js /* --------------------------- list of mixins in the module ----------------------- */ ?>
<?js if (mixins.count() > 0) { ?>
This module provides the following mixins:
<ul>
<?js     mixins.each(function(c) { ?>
      <li><a href="../mixins/<?js= c.name ?>.html"><?js= c.name ?></a></li>
<?js     });  /* end for */  ?>
</ul>   
<p>Note, that mixins are loaded automatically by JOSM. You don't have to load them using
<code>require("my/mixin")</code>.</p>
<?js } /* end if */ ?>

<?js /* --------------------------- list of namespaces in the module ----------------------- */ ?>
<?js if (namespaces.count() > 0) { ?>
This module provides the following namespaces:
<ul>
<?js      namespaces.each(function(c) {   ?>
      <li><a href="../namespaces/<?js= c.name ?>.html"><?js= c.name ?></a></li>
<?js     });  /* end for */  ?>
</ul>   
<p>Namespaces are plain javascript objects. In contrast to classes, they can't be instantiated.
They are similar to utility java classes, which provide static methods and fields only.</p>
<?js } /* end if */ ?>

<?js= self.partial("type/membersummary.tmpl", 
	{"doclet": doclet, "data": data, "ViewHelper": ViewHelper}) ?>
<?js= self.partial("type/properties.tmpl", 
	{"doclet": doclet, "data": data, "ViewHelper": ViewHelper}) ?>
<?js= self.partial("type/methods.tmpl", 
	{"doclet": doclet, "data": data, "ViewHelper": ViewHelper}) ?>

</div>