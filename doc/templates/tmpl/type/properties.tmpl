<?js
  /*
  * Renders the detail information for properties of a type
  */

const doclet = obj.doclet;         // the doclet representing the type
const data   = obj.data;           // the TAFFY DB with the doclets
const ViewHelper = obj.ViewHelper;

const vh = new ViewHelper(data);
const self = this;

function buildPropertyType(property) {
    return property.type && property.type.names
          ? ":" + vh.resolveTypes(property.type.names)
          : "";
}

function buildAliases(property) {
    return property.alias ? property.alias.join(", ") : "";
}

const properties = data({kind: "member", memberof: doclet.name}).order("name");
?>
<?js if (properties.count() > 0) {  ?>
<h2>Properties</h2>
<?js properties.each(function(property) {  ?>
   <p id="<?js= property.name ?>" class="member-header">
     <?js= property.name ?><?js= buildPropertyType(property) ?>
     <?js  if (property.alias) {                                             ?>
     <strong> | Aliases: </strong><?js= buildAliases(property) ?>
<?js  }   /* if (aliases) */                                                 ?>
   </p>
   <p><?js= vh.resolveClassReferences(property.description) ?></p>
   <?js= self.partial("type/examples.tmpl", property.examples) ?>
<?js }); /* each property */                                                 ?>
<?js }  /* end if */                                                         ?>
  